// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.2
// source: internal/api/metrics/metrics.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StaticDiskDiskType int32

const (
	StaticDisk_hdd     StaticDiskDiskType = 0
	StaticDisk_fdd     StaticDiskDiskType = 1
	StaticDisk_odd     StaticDiskDiskType = 2
	StaticDisk_unknown StaticDiskDiskType = 3
)

// Enum value maps for StaticDiskDiskType.
var (
	StaticDiskDiskType_name = map[int32]string{
		0: "hdd",
		1: "fdd",
		2: "odd",
		3: "unknown",
	}
	StaticDiskDiskType_value = map[string]int32{
		"hdd":     0,
		"fdd":     1,
		"odd":     2,
		"unknown": 3,
	}
)

func (x StaticDiskDiskType) Enum() *StaticDiskDiskType {
	p := new(StaticDiskDiskType)
	*p = x
	return p
}

func (x StaticDiskDiskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StaticDiskDiskType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_api_metrics_metrics_proto_enumTypes[0].Descriptor()
}

func (StaticDiskDiskType) Type() protoreflect.EnumType {
	return &file_internal_api_metrics_metrics_proto_enumTypes[0]
}

func (x StaticDiskDiskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StaticDiskDiskType.Descriptor instead.
func (StaticDiskDiskType) EnumDescriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{1, 0}
}

type DynamicConnectionConnectionType int32

const (
	DynamicConnection_tcp4    DynamicConnectionConnectionType = 0
	DynamicConnection_tcp6    DynamicConnectionConnectionType = 1
	DynamicConnection_udp4    DynamicConnectionConnectionType = 2
	DynamicConnection_udp6    DynamicConnectionConnectionType = 3
	DynamicConnection_unix    DynamicConnectionConnectionType = 4
	DynamicConnection_file    DynamicConnectionConnectionType = 5
	DynamicConnection_unknown DynamicConnectionConnectionType = 6
)

// Enum value maps for DynamicConnectionConnectionType.
var (
	DynamicConnectionConnectionType_name = map[int32]string{
		0: "tcp4",
		1: "tcp6",
		2: "udp4",
		3: "udp6",
		4: "unix",
		5: "file",
		6: "unknown",
	}
	DynamicConnectionConnectionType_value = map[string]int32{
		"tcp4":    0,
		"tcp6":    1,
		"udp4":    2,
		"udp6":    3,
		"unix":    4,
		"file":    5,
		"unknown": 6,
	}
)

func (x DynamicConnectionConnectionType) Enum() *DynamicConnectionConnectionType {
	p := new(DynamicConnectionConnectionType)
	*p = x
	return p
}

func (x DynamicConnectionConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynamicConnectionConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_api_metrics_metrics_proto_enumTypes[1].Descriptor()
}

func (DynamicConnectionConnectionType) Type() protoreflect.EnumType {
	return &file_internal_api_metrics_metrics_proto_enumTypes[1]
}

func (x DynamicConnectionConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynamicConnectionConnectionType.Descriptor instead.
func (DynamicConnectionConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{10, 0}
}

type StaticCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Processor uint32  `protobuf:"varint,1,opt,name=processor,proto3" json:"processor,omitempty"` // 第几个核心
	Model     string  `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`          // Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz
	Core      uint32  `protobuf:"varint,3,opt,name=core,proto3" json:"core,omitempty"`           // 所在物理核上的编号
	Cores     uint32  `protobuf:"varint,4,opt,name=cores,proto3" json:"cores,omitempty"`         // 某块CPU上的编号
	Physical  uint32  `protobuf:"varint,5,opt,name=physical,proto3" json:"physical,omitempty"`   // 物理CPU编号
	Mhz       float32 `protobuf:"fixed32,6,opt,name=mhz,proto3" json:"mhz,omitempty"`            // CPU频率
}

func (x *StaticCore) Reset() {
	*x = StaticCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticCore) ProtoMessage() {}

func (x *StaticCore) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticCore.ProtoReflect.Descriptor instead.
func (*StaticCore) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *StaticCore) GetProcessor() uint32 {
	if x != nil {
		return x.Processor
	}
	return 0
}

func (x *StaticCore) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *StaticCore) GetCore() uint32 {
	if x != nil {
		return x.Core
	}
	return 0
}

func (x *StaticCore) GetCores() uint32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *StaticCore) GetPhysical() uint32 {
	if x != nil {
		return x.Physical
	}
	return 0
}

func (x *StaticCore) GetMhz() float32 {
	if x != nil {
		return x.Mhz
	}
	return 0
}

type StaticDisk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model      string             `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`                                // 品牌型号
	Total      uint64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                               // 容量
	Type       StaticDiskDiskType `protobuf:"varint,3,opt,name=type,proto3,enum=metrics.StaticDiskDiskType" json:"type,omitempty"` // 类型
	Partitions []string           `protobuf:"bytes,4,rep,name=partitions,proto3" json:"partitions,omitempty"`                      // 逻辑分区
}

func (x *StaticDisk) Reset() {
	*x = StaticDisk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticDisk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticDisk) ProtoMessage() {}

func (x *StaticDisk) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticDisk.ProtoReflect.Descriptor instead.
func (*StaticDisk) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *StaticDisk) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *StaticDisk) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StaticDisk) GetType() StaticDiskDiskType {
	if x != nil {
		return x.Type
	}
	return StaticDisk_hdd
}

func (x *StaticDisk) GetPartitions() []string {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type StaticPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mount   string   `protobuf:"bytes,1,opt,name=mount,proto3" json:"mount,omitempty"`     // linux为挂载路径如/run，windows为盘符如C:
	Type    string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`       // NTFS
	Options []string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"` // rw,nosuid,nodev
	Total   uint64   `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`    // 总容量
	Inodes  uint64   `protobuf:"varint,5,opt,name=inodes,proto3" json:"inodes,omitempty"`  // inode数量
}

func (x *StaticPartition) Reset() {
	*x = StaticPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticPartition) ProtoMessage() {}

func (x *StaticPartition) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticPartition.ProtoReflect.Descriptor instead.
func (*StaticPartition) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *StaticPartition) GetMount() string {
	if x != nil {
		return x.Mount
	}
	return ""
}

func (x *StaticPartition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StaticPartition) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *StaticPartition) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StaticPartition) GetInodes() uint64 {
	if x != nil {
		return x.Inodes
	}
	return 0
}

type StaticInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // 网卡下标
	Name  string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`    // 网卡名称
	Mtu   uint32   `protobuf:"varint,3,opt,name=mtu,proto3" json:"mtu,omitempty"`     // 网卡mtu
	Flags []string `protobuf:"bytes,4,rep,name=flags,proto3" json:"flags,omitempty"`  // 网卡附加参数
	Addrs []string `protobuf:"bytes,5,rep,name=addrs,proto3" json:"addrs,omitempty"`  // 网卡上绑定的IP地址列表
	Mac   string   `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`      // 网卡mac地址
}

func (x *StaticInterface) Reset() {
	*x = StaticInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticInterface) ProtoMessage() {}

func (x *StaticInterface) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticInterface.ProtoReflect.Descriptor instead.
func (*StaticInterface) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *StaticInterface) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *StaticInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StaticInterface) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *StaticInterface) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *StaticInterface) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *StaticInterface) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

type StaticUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 用户名
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // 用户ID
	Gid  string `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`   // 用户组ID
}

func (x *StaticUser) Reset() {
	*x = StaticUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticUser) ProtoMessage() {}

func (x *StaticUser) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticUser.ProtoReflect.Descriptor instead.
func (*StaticUser) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *StaticUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StaticUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StaticUser) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

type StaticData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`                                              // 上报时间戳
	HostName        string                 `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`                      // 主机名
	Uptime          uint64                 `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`                                         // 系统启动时长
	OsName          string                 `protobuf:"bytes,4,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`                            // linux,windows
	PlatformName    string                 `protobuf:"bytes,5,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`          // debian,centos,...
	PlatformVersion string                 `protobuf:"bytes,6,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"` // 7.7.1908
	Install         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=install,proto3" json:"install,omitempty"`                                        // 系统安装时间
	Startup         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=startup,proto3" json:"startup,omitempty"`                                        // 系统启动时间
	KernelVersion   string                 `protobuf:"bytes,9,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`       // 3.10.0-1062.el7.x86_64
	Arch            string                 `protobuf:"bytes,10,opt,name=arch,proto3" json:"arch,omitempty"`                                             // amd64,i386,...
	PhysicalCpu     uint64                 `protobuf:"varint,11,opt,name=physical_cpu,json=physicalCpu,proto3" json:"physical_cpu,omitempty"`           // 物理核心数
	LogicalCpu      uint64                 `protobuf:"varint,12,opt,name=logical_cpu,json=logicalCpu,proto3" json:"logical_cpu,omitempty"`              // 逻辑核心数
	Cores           []*StaticCore          `protobuf:"bytes,13,rep,name=cores,proto3" json:"cores,omitempty"`                                           // CPU核心列表
	Disks           []*StaticDisk          `protobuf:"bytes,14,rep,name=disks,proto3" json:"disks,omitempty"`                                           // 磁盘列表
	Partitions      []*StaticPartition     `protobuf:"bytes,15,rep,name=partitions,proto3" json:"partitions,omitempty"`                                 // 分区列表
	Gateway         string                 `protobuf:"bytes,16,opt,name=gateway,proto3" json:"gateway,omitempty"`                                       // 网关地址
	Interfaces      []*StaticInterface     `protobuf:"bytes,17,rep,name=interfaces,proto3" json:"interfaces,omitempty"`                                 // 网卡列表
	Users           []*StaticUser          `protobuf:"bytes,18,rep,name=users,proto3" json:"users,omitempty"`                                           // 用户列表
}

func (x *StaticData) Reset() {
	*x = StaticData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticData) ProtoMessage() {}

func (x *StaticData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticData.ProtoReflect.Descriptor instead.
func (*StaticData) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *StaticData) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *StaticData) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *StaticData) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *StaticData) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *StaticData) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *StaticData) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *StaticData) GetInstall() *timestamppb.Timestamp {
	if x != nil {
		return x.Install
	}
	return nil
}

func (x *StaticData) GetStartup() *timestamppb.Timestamp {
	if x != nil {
		return x.Startup
	}
	return nil
}

func (x *StaticData) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *StaticData) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *StaticData) GetPhysicalCpu() uint64 {
	if x != nil {
		return x.PhysicalCpu
	}
	return 0
}

func (x *StaticData) GetLogicalCpu() uint64 {
	if x != nil {
		return x.LogicalCpu
	}
	return 0
}

func (x *StaticData) GetCores() []*StaticCore {
	if x != nil {
		return x.Cores
	}
	return nil
}

func (x *StaticData) GetDisks() []*StaticDisk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *StaticData) GetPartitions() []*StaticPartition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

func (x *StaticData) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *StaticData) GetInterfaces() []*StaticInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *StaticData) GetUsers() []*StaticUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type DynamicPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mount      string  `protobuf:"bytes,1,opt,name=mount,proto3" json:"mount,omitempty"`                               // linux为挂载路径如/run，windows为盘符如C:
	Used       uint64  `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`                                // 已使用字节数
	Free       uint64  `protobuf:"varint,3,opt,name=free,proto3" json:"free,omitempty"`                                // 剩余字节数
	Usage      float32 `protobuf:"fixed32,4,opt,name=usage,proto3" json:"usage,omitempty"`                             // 分区使用率
	InodeUsed  uint64  `protobuf:"varint,5,opt,name=inode_used,json=inodeUsed,proto3" json:"inode_used,omitempty"`     // inode使用数量
	InodeFree  uint64  `protobuf:"varint,6,opt,name=inode_free,json=inodeFree,proto3" json:"inode_free,omitempty"`     // inode剩余数量
	InodeUsage float32 `protobuf:"fixed32,7,opt,name=inode_usage,json=inodeUsage,proto3" json:"inode_usage,omitempty"` // inode使用率
}

func (x *DynamicPartition) Reset() {
	*x = DynamicPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicPartition) ProtoMessage() {}

func (x *DynamicPartition) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicPartition.ProtoReflect.Descriptor instead.
func (*DynamicPartition) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *DynamicPartition) GetMount() string {
	if x != nil {
		return x.Mount
	}
	return ""
}

func (x *DynamicPartition) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DynamicPartition) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *DynamicPartition) GetUsage() float32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *DynamicPartition) GetInodeUsed() uint64 {
	if x != nil {
		return x.InodeUsed
	}
	return 0
}

func (x *DynamicPartition) GetInodeFree() uint64 {
	if x != nil {
		return x.InodeFree
	}
	return 0
}

func (x *DynamicPartition) GetInodeUsage() float32 {
	if x != nil {
		return x.InodeUsage
	}
	return 0
}

type DynamicInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                   // 网卡名称
	BytesSent   uint64 `protobuf:"varint,2,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`       // 发送字节数
	BytesRecv   uint64 `protobuf:"varint,3,opt,name=bytes_recv,json=bytesRecv,proto3" json:"bytes_recv,omitempty"`       // 接收字节数
	PacketsSent uint64 `protobuf:"varint,4,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"` // 发送数据包数量
	PacketsRecv uint64 `protobuf:"varint,5,opt,name=packets_recv,json=packetsRecv,proto3" json:"packets_recv,omitempty"` // 接收数据包数量
}

func (x *DynamicInterface) Reset() {
	*x = DynamicInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicInterface) ProtoMessage() {}

func (x *DynamicInterface) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicInterface.ProtoReflect.Descriptor instead.
func (*DynamicInterface) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{7}
}

func (x *DynamicInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DynamicInterface) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *DynamicInterface) GetBytesRecv() uint64 {
	if x != nil {
		return x.BytesRecv
	}
	return 0
}

func (x *DynamicInterface) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *DynamicInterface) GetPacketsRecv() uint64 {
	if x != nil {
		return x.PacketsRecv
	}
	return 0
}

type DynamicUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuUsage        float32             `protobuf:"fixed32,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`                     // CPU使用率
	MemoryUsed      uint64              `protobuf:"varint,2,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`                // 已使用内存字节数
	MemoryFree      uint64              `protobuf:"varint,3,opt,name=memory_free,json=memoryFree,proto3" json:"memory_free,omitempty"`                // 剩余内存字节数
	MemoryAvailable uint64              `protobuf:"varint,4,opt,name=memory_available,json=memoryAvailable,proto3" json:"memory_available,omitempty"` // 可用内存字节数
	MemoryUsage     float32             `protobuf:"fixed32,5,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`            // 内存使用率
	SwapUsed        uint64              `protobuf:"varint,6,opt,name=swap_used,json=swapUsed,proto3" json:"swap_used,omitempty"`                      // 已使用swap内存字节数
	SwapFree        uint64              `protobuf:"varint,7,opt,name=swap_free,json=swapFree,proto3" json:"swap_free,omitempty"`                      // 剩余swap内存字节数
	Partitions      []*DynamicPartition `protobuf:"bytes,8,rep,name=partitions,proto3" json:"partitions,omitempty"`                                   // 分区列表
	Interfaces      []*DynamicInterface `protobuf:"bytes,9,rep,name=interfaces,proto3" json:"interfaces,omitempty"`                                   // 网卡列表
}

func (x *DynamicUsage) Reset() {
	*x = DynamicUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicUsage) ProtoMessage() {}

func (x *DynamicUsage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicUsage.ProtoReflect.Descriptor instead.
func (*DynamicUsage) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{8}
}

func (x *DynamicUsage) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *DynamicUsage) GetMemoryUsed() uint64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *DynamicUsage) GetMemoryFree() uint64 {
	if x != nil {
		return x.MemoryFree
	}
	return 0
}

func (x *DynamicUsage) GetMemoryAvailable() uint64 {
	if x != nil {
		return x.MemoryAvailable
	}
	return 0
}

func (x *DynamicUsage) GetMemoryUsage() float32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *DynamicUsage) GetSwapUsed() uint64 {
	if x != nil {
		return x.SwapUsed
	}
	return 0
}

func (x *DynamicUsage) GetSwapFree() uint64 {
	if x != nil {
		return x.SwapFree
	}
	return 0
}

func (x *DynamicUsage) GetPartitions() []*DynamicPartition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

func (x *DynamicUsage) GetInterfaces() []*DynamicInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type DynamicProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                       // 进程ID
	ParentId    uint32   `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`           // 父进程ID
	User        string   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                    // 用户
	CpuUsage    float32  `protobuf:"fixed32,4,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`          // CPU使用率
	Rss         uint64   `protobuf:"varint,5,opt,name=rss,proto3" json:"rss,omitempty"`                                     // 物理内存占用字节数
	Vms         uint64   `protobuf:"varint,6,opt,name=vms,proto3" json:"vms,omitempty"`                                     // 虚拟内存占用字节数
	Swap        uint64   `protobuf:"varint,7,opt,name=swap,proto3" json:"swap,omitempty"`                                   // swap内存占用字节数
	MemoryUsage float32  `protobuf:"fixed32,8,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"` // 内存使用率
	Cmd         []string `protobuf:"bytes,9,rep,name=cmd,proto3" json:"cmd,omitempty"`                                      // 命令行
	Listen      []uint32 `protobuf:"varint,10,rep,packed,name=listen,proto3" json:"listen,omitempty"`                       // 监听端口列表
	Connections uint64   `protobuf:"varint,11,opt,name=connections,proto3" json:"connections,omitempty"`                    // 连接数
}

func (x *DynamicProcess) Reset() {
	*x = DynamicProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicProcess) ProtoMessage() {}

func (x *DynamicProcess) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicProcess.ProtoReflect.Descriptor instead.
func (*DynamicProcess) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{9}
}

func (x *DynamicProcess) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DynamicProcess) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DynamicProcess) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DynamicProcess) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *DynamicProcess) GetRss() uint64 {
	if x != nil {
		return x.Rss
	}
	return 0
}

func (x *DynamicProcess) GetVms() uint64 {
	if x != nil {
		return x.Vms
	}
	return 0
}

func (x *DynamicProcess) GetSwap() uint64 {
	if x != nil {
		return x.Swap
	}
	return 0
}

func (x *DynamicProcess) GetMemoryUsage() float32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *DynamicProcess) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *DynamicProcess) GetListen() []uint32 {
	if x != nil {
		return x.Listen
	}
	return nil
}

func (x *DynamicProcess) GetConnections() uint64 {
	if x != nil {
		return x.Connections
	}
	return 0
}

type DynamicConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fd     uint32                          `protobuf:"varint,1,opt,name=fd,proto3" json:"fd,omitempty"`                                                  // 句柄号
	Pid    uint32                          `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`                                                // 进程号
	Type   DynamicConnectionConnectionType `protobuf:"varint,3,opt,name=type,proto3,enum=metrics.DynamicConnectionConnectionType" json:"type,omitempty"` // 连接类型
	Local  string                          `protobuf:"bytes,4,opt,name=local,proto3" json:"local,omitempty"`                                             // 本地地址
	Remote string                          `protobuf:"bytes,5,opt,name=remote,proto3" json:"remote,omitempty"`                                           // 远程地址
	Status string                          `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                           // 连接状态
}

func (x *DynamicConnection) Reset() {
	*x = DynamicConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicConnection) ProtoMessage() {}

func (x *DynamicConnection) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicConnection.ProtoReflect.Descriptor instead.
func (*DynamicConnection) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{10}
}

func (x *DynamicConnection) GetFd() uint32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *DynamicConnection) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *DynamicConnection) GetType() DynamicConnectionConnectionType {
	if x != nil {
		return x.Type
	}
	return DynamicConnection_tcp4
}

func (x *DynamicConnection) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *DynamicConnection) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *DynamicConnection) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DynamicSensorTemperature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // 名称
	Temp float32 `protobuf:"fixed32,2,opt,name=temp,proto3" json:"temp,omitempty"` // 温度
}

func (x *DynamicSensorTemperature) Reset() {
	*x = DynamicSensorTemperature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSensorTemperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSensorTemperature) ProtoMessage() {}

func (x *DynamicSensorTemperature) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSensorTemperature.ProtoReflect.Descriptor instead.
func (*DynamicSensorTemperature) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{11}
}

func (x *DynamicSensorTemperature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DynamicSensorTemperature) GetTemp() float32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

type DynamicProcesses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DynamicProcess `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DynamicProcesses) Reset() {
	*x = DynamicProcesses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicProcesses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicProcesses) ProtoMessage() {}

func (x *DynamicProcesses) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicProcesses.ProtoReflect.Descriptor instead.
func (*DynamicProcesses) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{12}
}

func (x *DynamicProcesses) GetData() []*DynamicProcess {
	if x != nil {
		return x.Data
	}
	return nil
}

type DynamicConnections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DynamicConnection `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DynamicConnections) Reset() {
	*x = DynamicConnections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicConnections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicConnections) ProtoMessage() {}

func (x *DynamicConnections) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicConnections.ProtoReflect.Descriptor instead.
func (*DynamicConnections) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{13}
}

func (x *DynamicConnections) GetData() []*DynamicConnection {
	if x != nil {
		return x.Data
	}
	return nil
}

type DynamicSensorsTemperatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DynamicSensorTemperature `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DynamicSensorsTemperatures) Reset() {
	*x = DynamicSensorsTemperatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSensorsTemperatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSensorsTemperatures) ProtoMessage() {}

func (x *DynamicSensorsTemperatures) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSensorsTemperatures.ProtoReflect.Descriptor instead.
func (*DynamicSensorsTemperatures) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{14}
}

func (x *DynamicSensorsTemperatures) GetData() []*DynamicSensorTemperature {
	if x != nil {
		return x.Data
	}
	return nil
}

type DynamicData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"` // 采集开始时间
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`     // 采集结束时间
	// Types that are assignable to Payload:
	//
	//	*DynamicData_Usage
	//	*DynamicData_Processes
	//	*DynamicData_Connections
	//	*DynamicData_Temps
	Payload isDynamicData_Payload `protobuf_oneof:"payload"`
}

func (x *DynamicData) Reset() {
	*x = DynamicData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicData) ProtoMessage() {}

func (x *DynamicData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicData.ProtoReflect.Descriptor instead.
func (*DynamicData) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{15}
}

func (x *DynamicData) GetBegin() *timestamppb.Timestamp {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *DynamicData) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (m *DynamicData) GetPayload() isDynamicData_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *DynamicData) GetUsage() *DynamicUsage {
	if x, ok := x.GetPayload().(*DynamicData_Usage); ok {
		return x.Usage
	}
	return nil
}

func (x *DynamicData) GetProcesses() *DynamicProcesses {
	if x, ok := x.GetPayload().(*DynamicData_Processes); ok {
		return x.Processes
	}
	return nil
}

func (x *DynamicData) GetConnections() *DynamicConnections {
	if x, ok := x.GetPayload().(*DynamicData_Connections); ok {
		return x.Connections
	}
	return nil
}

func (x *DynamicData) GetTemps() *DynamicSensorsTemperatures {
	if x, ok := x.GetPayload().(*DynamicData_Temps); ok {
		return x.Temps
	}
	return nil
}

type isDynamicData_Payload interface {
	isDynamicData_Payload()
}

type DynamicData_Usage struct {
	Usage *DynamicUsage `protobuf:"bytes,3,opt,name=usage,proto3,oneof"` // usage数据
}

type DynamicData_Processes struct {
	Processes *DynamicProcesses `protobuf:"bytes,4,opt,name=processes,proto3,oneof"` // 进程列表
}

type DynamicData_Connections struct {
	Connections *DynamicConnections `protobuf:"bytes,5,opt,name=connections,proto3,oneof"` // 连接列表
}

type DynamicData_Temps struct {
	Temps *DynamicSensorsTemperatures `protobuf:"bytes,6,opt,name=temps,proto3,oneof"` // 传感器温度
}

func (*DynamicData_Usage) isDynamicData_Payload() {}

func (*DynamicData_Processes) isDynamicData_Payload() {}

func (*DynamicData_Connections) isDynamicData_Payload() {}

func (*DynamicData_Temps) isDynamicData_Payload() {}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"` // agent id
	// Types that are assignable to Payload:
	//
	//	*Data_StaticData
	//	*Data_DynamicData
	Payload isData_Payload `protobuf_oneof:"payload"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_api_metrics_metrics_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_metrics_metrics_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_internal_api_metrics_metrics_proto_rawDescGZIP(), []int{16}
}

func (x *Data) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (m *Data) GetPayload() isData_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Data) GetStaticData() *StaticData {
	if x, ok := x.GetPayload().(*Data_StaticData); ok {
		return x.StaticData
	}
	return nil
}

func (x *Data) GetDynamicData() *DynamicData {
	if x, ok := x.GetPayload().(*Data_DynamicData); ok {
		return x.DynamicData
	}
	return nil
}

type isData_Payload interface {
	isData_Payload()
}

type Data_StaticData struct {
	StaticData *StaticData `protobuf:"bytes,10,opt,name=static_data,json=staticData,proto3,oneof"` // 静态数据
}

type Data_DynamicData struct {
	DynamicData *DynamicData `protobuf:"bytes,11,opt,name=dynamic_data,json=dynamicData,proto3,oneof"` // 动态数据
}

func (*Data_StaticData) isData_Payload() {}

func (*Data_DynamicData) isData_Payload() {}

var File_internal_api_metrics_metrics_proto protoreflect.FileDescriptor

var file_internal_api_metrics_metrics_proto_rawDesc = []byte{
	0x0a, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99,
	0x01, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x68, 0x7a, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x68, 0x7a, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x2e, 0x64, 0x69, 0x73, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x64, 0x69,
	0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x68, 0x64, 0x64, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x66, 0x64, 0x64, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x6f, 0x64, 0x64,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x03, 0x22,
	0x84, 0x01, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x61, 0x63, 0x22, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0xda, 0x05, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x34,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x75, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x70, 0x75, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x43,
	0x70, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x70,
	0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c,
	0x43, 0x70, 0x75, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x2a, 0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f,
	0x64, 0x69, 0x73, 0x6b, 0x52, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x39, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x11, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xab, 0x01, 0x0a, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x76, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x76, 0x22, 0xee,
	0x02, 0x0a, 0x0d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77,
	0x61, 0x70, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x77, 0x61, 0x70, 0x46, 0x72, 0x65, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22,
	0x96, 0x02, 0x0a, 0x0f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x72, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x76, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x77, 0x61, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x12, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x66, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x74,
	0x63, 0x70, 0x34, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x63, 0x70, 0x36, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x75, 0x64, 0x70, 0x34, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x64, 0x70,
	0x36, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x78, 0x10, 0x04, 0x12, 0x08, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x06, 0x22, 0x44, 0x0a, 0x1a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x22, 0x41, 0x0a, 0x11, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a,
	0x13, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x1c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe6,
	0x02, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x2e, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a,
	0x05, 0x74, 0x65, 0x6d, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05, 0x74, 0x65, 0x6d, 0x70, 0x73, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x2e,
	0x3b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_api_metrics_metrics_proto_rawDescOnce sync.Once
	file_internal_api_metrics_metrics_proto_rawDescData = file_internal_api_metrics_metrics_proto_rawDesc
)

func file_internal_api_metrics_metrics_proto_rawDescGZIP() []byte {
	file_internal_api_metrics_metrics_proto_rawDescOnce.Do(func() {
		file_internal_api_metrics_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_api_metrics_metrics_proto_rawDescData)
	})
	return file_internal_api_metrics_metrics_proto_rawDescData
}

var file_internal_api_metrics_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internal_api_metrics_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_internal_api_metrics_metrics_proto_goTypes = []interface{}{
	(StaticDiskDiskType)(0),              // 0: metrics.static_disk.disk_type
	(DynamicConnectionConnectionType)(0), // 1: metrics.dynamic_connection.connection_type
	(*StaticCore)(nil),                   // 2: metrics.static_core
	(*StaticDisk)(nil),                   // 3: metrics.static_disk
	(*StaticPartition)(nil),              // 4: metrics.static_partition
	(*StaticInterface)(nil),              // 5: metrics.static_interface
	(*StaticUser)(nil),                   // 6: metrics.static_user
	(*StaticData)(nil),                   // 7: metrics.static_data
	(*DynamicPartition)(nil),             // 8: metrics.dynamic_partition
	(*DynamicInterface)(nil),             // 9: metrics.dynamic_interface
	(*DynamicUsage)(nil),                 // 10: metrics.dynamic_usage
	(*DynamicProcess)(nil),               // 11: metrics.dynamic_process
	(*DynamicConnection)(nil),            // 12: metrics.dynamic_connection
	(*DynamicSensorTemperature)(nil),     // 13: metrics.dynamic_sensor_temperature
	(*DynamicProcesses)(nil),             // 14: metrics.dynamic_processes
	(*DynamicConnections)(nil),           // 15: metrics.dynamic_connections
	(*DynamicSensorsTemperatures)(nil),   // 16: metrics.dynamic_sensors_temperatures
	(*DynamicData)(nil),                  // 17: metrics.dynamic_data
	(*Data)(nil),                         // 18: metrics.data
	(*timestamppb.Timestamp)(nil),        // 19: google.protobuf.Timestamp
}
var file_internal_api_metrics_metrics_proto_depIdxs = []int32{
	0,  // 0: metrics.static_disk.type:type_name -> metrics.static_disk.disk_type
	19, // 1: metrics.static_data.time:type_name -> google.protobuf.Timestamp
	19, // 2: metrics.static_data.install:type_name -> google.protobuf.Timestamp
	19, // 3: metrics.static_data.startup:type_name -> google.protobuf.Timestamp
	2,  // 4: metrics.static_data.cores:type_name -> metrics.static_core
	3,  // 5: metrics.static_data.disks:type_name -> metrics.static_disk
	4,  // 6: metrics.static_data.partitions:type_name -> metrics.static_partition
	5,  // 7: metrics.static_data.interfaces:type_name -> metrics.static_interface
	6,  // 8: metrics.static_data.users:type_name -> metrics.static_user
	8,  // 9: metrics.dynamic_usage.partitions:type_name -> metrics.dynamic_partition
	9,  // 10: metrics.dynamic_usage.interfaces:type_name -> metrics.dynamic_interface
	1,  // 11: metrics.dynamic_connection.type:type_name -> metrics.dynamic_connection.connection_type
	11, // 12: metrics.dynamic_processes.data:type_name -> metrics.dynamic_process
	12, // 13: metrics.dynamic_connections.data:type_name -> metrics.dynamic_connection
	13, // 14: metrics.dynamic_sensors_temperatures.data:type_name -> metrics.dynamic_sensor_temperature
	19, // 15: metrics.dynamic_data.begin:type_name -> google.protobuf.Timestamp
	19, // 16: metrics.dynamic_data.end:type_name -> google.protobuf.Timestamp
	10, // 17: metrics.dynamic_data.usage:type_name -> metrics.dynamic_usage
	14, // 18: metrics.dynamic_data.processes:type_name -> metrics.dynamic_processes
	15, // 19: metrics.dynamic_data.connections:type_name -> metrics.dynamic_connections
	16, // 20: metrics.dynamic_data.temps:type_name -> metrics.dynamic_sensors_temperatures
	7,  // 21: metrics.data.static_data:type_name -> metrics.static_data
	17, // 22: metrics.data.dynamic_data:type_name -> metrics.dynamic_data
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_internal_api_metrics_metrics_proto_init() }
func file_internal_api_metrics_metrics_proto_init() {
	if File_internal_api_metrics_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_api_metrics_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticDisk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSensorTemperature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicProcesses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicConnections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSensorsTemperatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_api_metrics_metrics_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_api_metrics_metrics_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*DynamicData_Usage)(nil),
		(*DynamicData_Processes)(nil),
		(*DynamicData_Connections)(nil),
		(*DynamicData_Temps)(nil),
	}
	file_internal_api_metrics_metrics_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Data_StaticData)(nil),
		(*Data_DynamicData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_api_metrics_metrics_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_api_metrics_metrics_proto_goTypes,
		DependencyIndexes: file_internal_api_metrics_metrics_proto_depIdxs,
		EnumInfos:         file_internal_api_metrics_metrics_proto_enumTypes,
		MessageInfos:      file_internal_api_metrics_metrics_proto_msgTypes,
	}.Build()
	File_internal_api_metrics_metrics_proto = out.File
	file_internal_api_metrics_metrics_proto_rawDesc = nil
	file_internal_api_metrics_metrics_proto_goTypes = nil
	file_internal_api_metrics_metrics_proto_depIdxs = nil
}
